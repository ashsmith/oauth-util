name: Build and Release

on:
  push:
    tags:
      - "v*" # Trigger on version tags

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: oauth-util
            goos: linux
            goarch: amd64
            ext: ""
          - name: oauth-util
            goos: linux
            goarch: arm64
            ext: ""
          - name: oauth-util
            goos: darwin
            goarch: amd64
            ext: ""
          - name: oauth-util
            goos: darwin
            goarch: arm64
            ext: ""
          - name: oauth-util.exe
            goos: windows
            goarch: amd64
            ext: ".exe"
          - name: oauth-util.exe
            goos: windows
            goarch: arm64
            ext: ".exe"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: |
          go build -ldflags="-s -w -X main.version=${{ github.ref_name }}" -o ${{ matrix.name }} .
          # Create archive
          if [ "${{ matrix.goos }}" = "windows" ]; then
            7z a oauth-util-${{ matrix.goos }}-${{ matrix.goarch }}.zip ${{ matrix.name }}
          else
            tar -czf oauth-util-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz ${{ matrix.name }}
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: oauth-util-${{ matrix.goos }}-${{ matrix.goarch }}
          path: |
            oauth-util-${{ matrix.goos }}-${{ matrix.goarch }}.*
            ${{ matrix.name }}

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/**/oauth-util-*.tar.gz
            dist/**/oauth-util-*.zip
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
